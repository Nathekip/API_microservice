openapi: 3.0.3
info:
  title: Swagger Olympics API Sports
  description: API for Olympics sports
  version: 1.0.0
servers:
  - url: localhost:5000
paths:
  /sport:
    put:
      tags:
        - sport
      summary: Update an existing sport
      description: Update an existing sport by Id
      operationId: updateSport
      requestBody:
        description: Update an existent sport in the olympic
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sport'
          application/xml:
            schema:
              $ref: '#/components/schemas/Sport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sport'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sport'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Sport'
        '400':
          description: Invalid ID supplied
        '404':
          description: Sport not found
        '422':
          description: Validation exception
    post:
      tags:
        - sport
      summary: Add a new sport to the olympic
      description: Add a new sport to the olympic
      operationId: addSport
      requestBody:
        description: Create a new sport in the olympic
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sport'
          application/xml:
            schema:
              $ref: '#/components/schemas/Sport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sport'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sport'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Sport'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /sport/findByName:
    get:
      tags:
        - sport
      summary: Find Sport by name
      description: Do you can test to find a sport with a name.
      operationId: findSportsByName
      parameters:
        - name: name
          in: query
          description: Name to filter by
          required: false
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: '#/components/schemas/Sport'          
            application/xml:
              schema:
                type: string
                items:
                  $ref: '#/components/schemas/Sport'
        '400':
          description: Invalid name value
  /sport/{sportId}:
    get:
      tags:
        - sport
      summary: Find sport by ID
      description: Returns a single sport
      operationId: getSportById
      parameters:
        - name: sportId
          in: path
          description: ID of sport to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sport'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Sport'
        '400':
          description: Invalid ID supplied
        '404':
          description: Sport not found
    post:
      tags:
        - sport
      summary: Updates a sport in the store with form data
      description: ''
      operationId: updateSportWithForm
      parameters:
        - name: sportId
          in: path
          description: ID of sport that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of sport that needs to be updated
          schema:
            type: string
        - name: status
          in: query
          description: Status of sport that needs to be updated
          schema:
            type: string
      responses:
        '400':
          description: Invalid input
    delete:
      tags:
        - sport
      summary: Deletes a sport
      description: delete a sport
      operationId: deleteSport
      parameters:
        - name: sportId
          in: path
          description: Sport id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid sport value
components:
  schemas:
    Sport:
      required:
        - sport_id
        - name
      type: object
      properties:
        sport_id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: foorball
        category:
          type: string
          example: athleticism
        photoSport:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoSport
        finalDate:
          type: string
          description: Final date
          example: "2024-08-01"
          format: date
      xml:
        name: sport